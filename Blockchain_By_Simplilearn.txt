⭐ Overview of Blockchain ⭐

Q. What is blockchain?
- Blockchain is a system of recording information in a way that makes it difficult or impossible to change, hack, or cheat the system.
- A blockchain is essentially a digital ledger(record or account book) of transactions that is duplicated and distributed across the entire network of computer systems on the blockchain.

Q. Overview of blockchain?
- Blockchain is a decentralized ledger of all transactions across a peer-to-peer network.
- Blockchain is a technology that enables Bitcoin and is also applied to many business processes.
- Blockchain not only performs transactions but also ensures anonymity(anonymous) and security of the users.

Q. History of blockchain?
- (1990) The concept of distributed ledgers has been around since 1990.
- (2009) Satoshi Nakamoto created Bitcoin and introduced the concept of Blockchain.
- (2011-2012) Cryptocurrency deployment in applications.
- (2012-2013) Currency transfer and digital payment system.
- (2013-2014) Financial markets and applications started using Blockchain beyond cash transactions.
- (2014-2015) Evolution of smart contracts.
- (2015-2016) Permissioned Blockchain network solution.
- (2016-2017) Market development and exploration across industries.

# Blockchain in Banking System:
@ Issues in Banking System:
1. High transaction cost
2. Account hacking
3. Net frauds
4. Financial Crisis

@ Blockchain solution for the issues:
1. Decentralized System
2. Distributed Ledger
3. Incentives of Validation
4. Consensus(a general agreement) Algorithm
5. Cryptography(art of writing or solving codes) Algorithm

# Blockchain Transaction Process:
1. Transaction is requested
2. Transaction is broadcasted
3. Transaction is validated by the Minter
4. Transaction becomes a part of the new block created
5. New block is added to the Blockchain
6. Transaction is now completed

# Steps of Blockchain Transaction:
- Blockchain transaction works by implementing one of the following features in each step:
1. Cryptography Algorithm
2. Decentralized Network
3. Consensus Mechanism
4. Distributed Ledger

# Features of Blockchain:
1. Cryptography: 
- Plaintext(Readable format Non-encrypted data)
- Encryption
- Ciphertext(Non-readable format Encrypted data)
- Decryption
- Plaintext(Readable format Non-encrypted data)

- There are two kinds of Cryptography:
1. Asymmetric Key Cryptography:
- Asymmetric key cryptography uses two kinds of keys public key and private key.
- Plain text -> Encrypts message using public key -> Cipher text -> Decrypts message using private key -> Plain text

2. Symmetric Key Cryptography:
- Symmetric key cryptography uses only one key which is the secret key used for both encryption and decryption.
- Plain text -> Encrypt message using the same key -> Cipher text -> Decrypt message using the same key -> Plain text

Q. What is Digital Signature?
- Public Key + Private Key = Digital Signature
- A digital signature provides authentication and validation like normal signatures.
- It ensures the security and integrity of data recorded on the Blockchain.
- It uses asymmetric cryptography in which information can be shared using a public key.
- Primary keys are linked to users providing digital signatures a quality of nonrepudiation. 

# Consensus Protocol:
- It is a fault-tolerant protocol that is used to achieve the necessary agreement on a single data value or a single state of network.
- It is a set of rules that decides on the contribution of the various participants of the Blockchain.
- It ensures that all transactions occuring on the network are genuine and all participants agree on the consensus of the ledger.

# Features of Consensus Protocol:
- Efficient 
- Secure
- Real-time
- Reliable
- Functional 

# Blockchain Block Structure:
- Header: Contains version information, nonce, previous block id, and timestamp.
- Merkle: Is a hash built from the block's transaction identifiers.
- List of records: Is an identification of hashes that were included into the block's Merkle tree.

# Blockchain Identifiers:
1. Block Header:
- Primary identifier of a block
- Digital fingerprint, twice the size of a block header
- Unique identification of a block of 32-byte hash

2. Block Height:
- Position of the block in Blockchain
- The first block is of height 0
- Each node dynamically identifies a block

# Blockchain Merkle Tree:
- Data structure used for summarizing and verifying the integrity of large sets of data.
- It is also known as Binary Hash Tree.

# Advantages of Merkle Tree:
- Integrity
- Less memory required
- Proofs are computed quickly and easily
- Provides validation of data
- Less information required

# Distributed Ledger:
- Ledgers store the copy of transactions that have taken place. Every single person of the network has a copy of the ledger.
- Example:
> John = 3 BTC (John has 3 BTC)
> John => Kat 3 BTC (John gives 3 BTC to Kat)
> Kat => Peter 2 BTC (Kat gives 2 BTC to Peter)
> Peter => Susan 1 BTC (Peter gives 1 BTC to Susan)
- They will all have a similar copy of these transactions.

# Evolution of Ledgers:
- Clay tablets > Papyrus > Tally sticks > Double entry book keeping > Spreadsheets > Distributed ledger

# Features of Blockchain in Transaction Process:
- Cryptographic Algorithm > Decentralized System > Validation by Miner > Block Creation > Proof of Work > Distributed Ledger

# Types of Blockchain: 
1. Public:
- Bitcoin > Ethereum > Dash > Factom
- Ledgers are publicly available to verify or add blocks to the Blockchain.
- Public Blockchains can receive and send transactions to anybody in the world.
- They can be audited by anyone and every node on the network has the same amount of transmission power.

2. Private: 
- Only authorized users can add or verify the blocks, but anyone can view it.
- A private Blockchain is a closed network that offers its participants the benefit of the technology.
- Example of private Blockchain: MultiChain, Blockstack.

3. Consortium:
- Only a predefined set of nodes has permission to write the block, since it is a semi-centralized Blockchain.
- Example of consortium nodes in the Blockchain world are: Hyperledger 1.0, R3, Ripple.

# Blockchain Platforms:
- ethereum [Largest cryptocurrency after Bitcoin]
- r3 [Distributed ledger-based platform]
- ripple [Cross-border payments]
- Chain [Blockchain-based cloud infrastructure]
@ Other Blockchain Platforms:
- Hyperledger [Consortium network for enterprise Blockchain applications]
- IOTA [Backs nano payments]
- openchain [Open source, enterprise-ready Blockchain platform]
- Quorum [Majority voting consensus mechanism]

# Blockchain Application Components:
1. Node Application:
- Each node has to install and run a computer application definitive to the ecosystem.

2. Shared Ledger: 
- A ledger is managed inside the node application whose contents can be viewed once the application is running.

3. Consensus Algorithm:
- It provides the rule for how the ecosystem will arrive at a single view in a ledger, and how it will be implemented as a part of node application.

4. Virtual Machine:
- An abstraction of instruction-operated machine implemented as a part of the node application.

# Blockchain Application Templates:
1. Many-to-One:
- Used for applications where a user sets up the contracts for a specific purpose.

2. One-to-One:
- Used for applications which involve financial contracts between two entities.

⭐ Bitcoin Blockchain ⭐

# Introduction to Bitcoin:
- Bitcoin was the first digital currency that facilitated instant transfer of value across the world. 
- Bitcoins cannot be printed.
- Bitcoins are created by the computers all around the world and are held electronically.

# There are two major operations in a bitcoin system:
1. Transaction Management: transferring the coins from one address to another
2. Currency generation: regulating the monetary value

# Best Bitcoin Exchanges:
- Coinbase - SpectroCoin - Indacoin - Kraken - LocalBitcoins

# Bitcoin Wallets:
- Bitcoin wallets are digital wallets where private keys are used to access the Bitcoin address and signature for transactions.
- Bitcoins are not stored anywhere.
- There is a private key matched to every Bitcoin address which can be saved in the Bitcoin wallet of the person who owns the Bitcoins.

# Types of Bitcoin Wallets:
1. Software Wallets:
- Software wallets are installed on your computer to store your private keys.

2. Web Wallets:
- Online wallets are convenient, because you can access your funds from any device.

3. Hardware Wallets:
- Hardware wallets are used to store private keys on storage device such as USB drives.

4. Brain Wallets:
- A brain wallet refers to the concept of storing Bitcoins in one's own mind by memorizing a seed phrase.

5. Mobile Wallets:
- Mobile wallets run as apps storing your private keys to pay directly from your phone.

# Best Bitcoin Wallets:
1. Software Wallets: Armory, Bitcoin Core, MultiBit HD

2. Web Wallets: Coinbase, Blockchain, Circle

3. Hardware Wallets: Ledger, Trezor, Opendime

4. Mobile Wallets: Breadwallet, Mycelium, Bitcoin Wallet

# Pseudonymity in Bitcoin:
- Pseudonymity is the near-anonymous state in which users have disguised identities and do not disclose their true identities.
- Bitcoin is a permissionless Blockchain where you don't need to set up an account.
- The public and private keys are generated by the wallet.
- The address acts as an identifier or pseudonym of a user's transaction.

# Bitcoin Transaction Structure:
- A Bitcoin transaction has three pieces of information:
1. Input: This is a record of which Bitcoin address was used to send the Bitcoins to the receiver in the first place.
2. Amount: This is the amount of Bitcoins that the sender sends to the receiver.
3. Output: This is send to the sender's address as change. 

# Bitcoin Script Instructions:
- A script is really a list of instructions which is recorded with each transaction.
- Bitcoin scripting language is small.
- It consists of 256 opcodes out of which 15 are disabled and 75 are reserved.
- Each instruction is of one byte.
- Opcodes have the following: constants, flow control, stack, bitwise logic, arithmetic, crypto, locktime, pseudo-words, and reserved words.

# Bitcoin Network:
- Bitcoin is an ad hoc network with random topology.
- The protocol runs on TCP 8333.
- All the nodes are treated equally in Bitcoin network.
- New nodes can join the network anytime, and the nonresponsive nodes are removed after 3 hours.

# Bitcoin Network Node:
- A full Bitcoin node is a collection of four functions:
1. Wallet 2. Miner 3. Full Blockchain 4. Network routing node

# Bitcoin Mining Process:
- Bitcoins are created by the process od mining.
- Following are the steps in Bitcoin mining:
1. Autonomous check of every transaction
2. Independent aggregation of transactions into new blocks
3. Independent confirmation of new blocks by each node
4. Independent selection by every node of the chain with the most cumulative computation

⭐ Ethereum ⭐

# Ethereum:
- Ethereum is a decentralized platform that runs the smart contracts without any downtime, fraud, and third-party interference and also has its own cryptocurrency called Ether.

# Features of Ethereum:
- Secured
- Community Support
- Corporate Friendly
- Asset Issuance
- Fast 
- Uncensored 

# Gas in Ethereum:
- Gas is the fundamental block of Ethereum ecosystem that is paid for every operation performed on Ethereum Blockchain.
- Gas is the crypto fuel for Ethereum. It can be considered a transaction fee which has to be paid when one party sends Ethers to another party.
- 'doMath' function is used to calculate the gas [Gas Limit * Gas Price]. 

# Ether:
- Ether is a necessary element needed for operating the Ethereum platform.
- It is an incentive that the client of the platform pays to execute requested operations.
- It ensures that the developers write error-free codes, because unnecessary codes will increase the cost.
- It is the crypto-fuel for the Ethereum network.

# Difference between Bitcoin and Ether:
> Bitcoin:
- Uses secure hash algorithm(SHA-256).
- Used for purchasing goods and services.
- A currency created to compete against the gold and flat currencies.
- Transaction speed is measured in minutes.

> Ether:
- Uses ethash algorithm.
- Used for making decentralized apps.
- A token created for facilitating smart contracts.
- Transaction speed is measured in seconds.

# Ethereum Virtual Machine (EVM):
- Ethereum Virtual Machine (EVM) is an engine which executes translation code.
- Smart contracts are compiled into bytecode which an EVM can read and execute.
- Ethereum possesses its own programming language known as the EVM Bytecode. 
- The Ethereum Virtual Machine uses a set of instructions, called opcodes, to execute specific tasks.

# Ethereum Languages:
- Contracts are compiled into EVM bytecode and deployed to Ethereum Blockchain for execution.
- Ethereum languages are:
1.Solidity 2.LLL 3.Vyper 4.Serpent 5.Mutan 6.Julia 

# Types of Ethereum Accounts:

# Externally Owned Accounts (EOA):
- EOA is an account controlled by a private key that has the ability to send Ethers and messages from the account.

> Properties of EOA:
- It has an Ether balance
- It can send transactions
- It is controlled by private keys
- It has no associated code

# Smart Contract:
- A smart contract is a code running on top of the Blockchain.
- It contains the set of rules for the nodes to agree upon so that they interact with each other.

> Properties of Smart Contract:
- It has an Ether balance
- It has an associated code
- It is triggered by transactions or messages
- It performs operations of arbitrary complexity

> Advantages of Smart Contract are as follows:
- It is the simplest form of decentralization
- Has higher degree of security
- Eliminates the need for a third-party
- Provides automatic agreement enforcement
- Turns legal obligations into automated processes
- Lowers transaction cost

> Characteristics of Smart Contract:
- Self-verifying
- Self-executing
- Cost Saving 
- Temper Resistant

> Process of Smart Contracts:
- An optional contract between the parties is written as a code in the Blockchain. The individuals involved are anonymous, but the contract is made through a public ledger.
- A trigger event like an expiration date or a strike price is hit, and the contract executes itself according to the coded terms.
- Regulators can use the Blockchain to understand the activities in the market while maintaining the privacy of an individual's position.

# Types of Ethereum Tools:
1. Geth:
- Multipurpose command-line tool that runs an Ethereum node implemented in Go.

2. Ganache:
- Ganache CLI is a fast and customizable Blockchain emulator which allows to make calls to Blockchain without running the actual Ethereum node.

> Properties of Ganache:
- Transactions are mined instantly.
- No transaction cost.
- Accounts can be recycled, reset, and instantiated with a fixed amount of Ether without the need for faucets or mining.
- Gas price and mining speed can be modified.
- A convenient GUI gives you an overview of your testchain events.

3. Parity:
- The fastest, lightest, and most secure Ethereum client that provides the core infrastructure essentials for quick and reliable services.
- Parity is written in Rust language.
- It is an Ethereum client that is integrated directly into your web browser.
- Parity serves as an Ethereum GUI browser.
- Parity provides access to a diverse range of Ethereum features including dApps.

4. MetaMask:
- MetaMask turns Google Chrome into a browser that allows the users to send and receive transactions and also to fetch data from the Blockchain.

5. Mist Wallet:
- End-user interface for Ethereum that is developed for browsing and using dApps.
- Mist is an official Ethereum wallet.
- It was developed and distributed by the team, which is responsible for the management of Ethereum ecosystem.
- It is used by developers who want to create, deploy, and use smart contracts.
- It is a full node wallet, which means, you'll have to download the entire Ethereum Blockchain onto your computer.

6. Swarm:
- Swarm is a platform which supports distributed storage and provides content distribution services. 
- It provides sufficient decentralization and redundant storage of Ethereum records to distribute Blockchain data as well as dApp codes.
- Leverages the underlying Ethereum infrastructure.
- Files are split into pieces and are stored in the nodes of the network.
- Accounting protocol is used by the peers.

7. IPFS
8. Whisper